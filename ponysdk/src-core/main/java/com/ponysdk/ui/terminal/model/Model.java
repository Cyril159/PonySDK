
package com.ponysdk.ui.terminal.model;

public enum Model {

    HEARTBEAT(255, TypeModel.NULL_SIZE, true),

    OBJECT_ID(0, TypeModel.INTEGER_SIZE),

    TYPE_CREATE(1, TypeModel.NULL_SIZE, true),
    TYPE_UPDATE(2, TypeModel.NULL_SIZE, true),
    TYPE_GC(3, TypeModel.NULL_SIZE, true),
    TYPE_ADD(4, TypeModel.NULL_SIZE, true),
    TYPE_REMOVE(5, TypeModel.NULL_SIZE, true),
    TYPE_CLOSE(6, TypeModel.NULL_SIZE, true),
    TYPE_ADD_HANDLER(7, TypeModel.NULL_SIZE, true),
    TYPE_HISTORY(245, TypeModel.NULL_SIZE, true),
    TYPE_REMOVE_HANDLER(246, TypeModel.NULL_SIZE, true),

    PARENT_OBJECT_ID(8, TypeModel.INTEGER_SIZE),
    PUT_STYLE_KEY(9, TypeModel.VARIABLE_SIZE),
    STYLE_VALUE(10, TypeModel.VARIABLE_SIZE),
    REMOVE_STYLE_KEY(11, TypeModel.VARIABLE_SIZE),
    PUT_PROPERTY_KEY(12, TypeModel.VARIABLE_SIZE),
    PROPERTY_VALUE(13, TypeModel.VARIABLE_SIZE),
    PUT_ATTRIBUTE_KEY(14, TypeModel.VARIABLE_SIZE),
    ATTRIBUTE_VALUE(15, TypeModel.VARIABLE_SIZE),
    REMOVE_ATTRIBUTE_KEY(16, TypeModel.VARIABLE_SIZE),
    PREVENT_EVENT(17, TypeModel.INTEGER_SIZE),
    ADD_STYLE_NAME(18, TypeModel.VARIABLE_SIZE),
    REMOVE_STYLE_NAME(19, TypeModel.VARIABLE_SIZE),
    HREF(20, TypeModel.VARIABLE_SIZE),
    TEXT(21, TypeModel.VARIABLE_SIZE),
    HTML(22, TypeModel.VARIABLE_SIZE),
    WIDGET_ID(23, TypeModel.INTEGER_SIZE),
    WIDGET(125, TypeModel.BOOLEAN_SIZE),
    VALUE_CHECKBOX(239, TypeModel.BOOLEAN_SIZE),
    VALUE_KEY(240, TypeModel.INTEGER_SIZE),
    VALUE(24, TypeModel.VARIABLE_SIZE), // Multi type ?!
    WORD_WRAP(25, TypeModel.BOOLEAN_SIZE),
    CLEAR(26, TypeModel.NULL_SIZE),
    CLEAR_ROW(27, TypeModel.INTEGER_SIZE),
    INSERT_ROW(28, TypeModel.INTEGER_SIZE),
    CELL_PADDING(29, TypeModel.INTEGER_SIZE),
    CELL_SPACING(30, TypeModel.INTEGER_SIZE),
    HORIZONTAL_ALIGNMENT(31, TypeModel.INTEGER_SIZE),
    VERTICAL(238, TypeModel.BOOLEAN_SIZE),
    VERTICAL_ALIGNMENT(32, TypeModel.VARIABLE_SIZE),
    WIDGET_HIDDEN(33, TypeModel.BOOLEAN_SIZE),
    LEFT(34, TypeModel.DOUBLE_SIZE),
    RIGHT(35, TypeModel.DOUBLE_SIZE),
    WIDTH(36, TypeModel.DOUBLE_SIZE),
    TOP(37, TypeModel.DOUBLE_SIZE),
    BOTTOM(38, TypeModel.DOUBLE_SIZE),
    HEIGHT(39, TypeModel.DOUBLE_SIZE),
    UNIT(40, TypeModel.INTEGER_SIZE),
    ANIMATE(41, TypeModel.INTEGER_SIZE),
    NAME(42, TypeModel.VARIABLE_SIZE),
    ANIMATION_DURATION(43, TypeModel.INTEGER_SIZE),
    OPEN(44, TypeModel.BOOLEAN_SIZE),
    IMAGE_URL(45, TypeModel.VARIABLE_SIZE),
    NATIVE(46, TypeModel.VARIABLE_SIZE),
    BIND(47, TypeModel.VARIABLE_SIZE),
    CELL_HORIZONTAL_ALIGNMENT(48, TypeModel.INTEGER_SIZE),
    CELL(49, TypeModel.INTEGER_SIZE),
    CELL_VERTICAL_ALIGNMENT(50, TypeModel.INTEGER_SIZE),
    CELL_HEIGHT(51, TypeModel.VARIABLE_SIZE),
    CELL_WIDTH(52, TypeModel.VARIABLE_SIZE),
    INDEX(53, TypeModel.INTEGER_SIZE),
    REMOVE(54, TypeModel.NULL_SIZE),
    COOKIE_EXPIRE(55, TypeModel.LONG_SIZE),
    ADD(56, TypeModel.NULL_SIZE),
    TIME(235, TypeModel.LONG_SIZE),
    ANIMATION(58, TypeModel.BOOLEAN_SIZE),
    MAX_LENGTH(59, TypeModel.INTEGER_SIZE),
    VISIBLE_LENGTH(60, TypeModel.INTEGER_SIZE),
    MASK(61, TypeModel.VARIABLE_SIZE),
    VISIBILITY(62, TypeModel.BOOLEAN_SIZE),
    REPLACEMENT_STRING(63, TypeModel.VARIABLE_SIZE),
    DATE_FORMAT_PATTERN(64, TypeModel.VARIABLE_SIZE),
    TAG(65, TypeModel.VARIABLE_SIZE),
    INNER_HTML(66, TypeModel.VARIABLE_SIZE),
    INNER_TEXT(67, TypeModel.VARIABLE_SIZE),
    PICKER(68, TypeModel.INTEGER_SIZE),
    ROW(69, TypeModel.INTEGER_SIZE),
    HTMLTABLE_ROW_STYLE(70, TypeModel.NULL_SIZE),
    ROW_FORMATTER_ADD_STYLE_NAME(71, TypeModel.VARIABLE_SIZE),
    ROW_FORMATTER_REMOVE_STYLE_NAME(72, TypeModel.VARIABLE_SIZE),
    ROW_FORMATTER_SET_STYLE_NAME(73, TypeModel.VARIABLE_SIZE),
    COLUMN(74, TypeModel.INTEGER_SIZE),
    CELL_FORMATTER_ADD_STYLE_NAME(75, TypeModel.VARIABLE_SIZE),
    HTMLTABLE_CELL_STYLE(76, TypeModel.NULL_SIZE),
    CELL_FORMATTER_REMOVE_STYLE_NAME(77, TypeModel.VARIABLE_SIZE),
    CELL_FORMATTER_SET_STYLE_NAME(78, TypeModel.VARIABLE_SIZE),
    COLUMN_FORMATTER_COLUMN_WIDTH(79, TypeModel.VARIABLE_SIZE),
    HTMLTABLE_COLUMN_STYLE(80, TypeModel.NULL_SIZE),
    COLUMN_FORMATTER_ADD_STYLE_NAME(81, TypeModel.VARIABLE_SIZE),
    COLUMN_FORMATTER_REMOVE_STYLE_NAME(82, TypeModel.VARIABLE_SIZE),
    COLUMN_FORMATTER_SET_STYLE_NAME(83, TypeModel.VARIABLE_SIZE),
    PLACEHOLDER(84, TypeModel.VARIABLE_SIZE),
    HANDLER_SELECTION_HANDLER(85, TypeModel.NULL_SIZE),
    HANDLER_DATE_VALUE_CHANGE_HANDLER(86, TypeModel.NULL_SIZE),
    HANDLER_BOOLEAN_VALUE_CHANGE_HANDLER(87, TypeModel.NULL_SIZE),
    DATE_ENABLED(88, TypeModel.VARIABLE_SIZE),
    ENABLED(89, TypeModel.BOOLEAN_SIZE),
    ADD_DATE_STYLE(90, TypeModel.VARIABLE_SIZE),
    STYLE_NAME(91, TypeModel.VARIABLE_SIZE),
    REMOVE_DATE_STYLE(92, TypeModel.VARIABLE_SIZE),
    POPUP_CAPTION(94, TypeModel.VARIABLE_SIZE),
    WIDGET_VISIBLE(95, TypeModel.BOOLEAN_SIZE),
    IMAGE_WIDTH(248, TypeModel.INTEGER_SIZE),
    IMAGE_HEIGHT(249, TypeModel.INTEGER_SIZE),
    WIDGET_WIDTH(96, TypeModel.VARIABLE_SIZE),
    WIDGET_HEIGHT(97, TypeModel.VARIABLE_SIZE),
    WIDGET_TITLE(98, TypeModel.VARIABLE_SIZE),
    STYLE_PRIMARY_NAME(99, TypeModel.VARIABLE_SIZE),
    ENSURE_DEBUG_ID(101, TypeModel.VARIABLE_SIZE),
    HANDLER_CHANGE_HANDLER(102, TypeModel.NULL_SIZE),
    ITEM_INSERTED(103, TypeModel.NULL_SIZE),
    ITEM_TEXT(104, TypeModel.VARIABLE_SIZE),
    ITEM_UPDATED(105, TypeModel.NULL_SIZE),
    ITEM_REMOVED(106, TypeModel.NULL_SIZE),
    SELECTED_INDEX(107, TypeModel.INTEGER_SIZE),
    SELECTED(108, TypeModel.BOOLEAN_SIZE),
    MULTISELECT(109, TypeModel.BOOLEAN_SIZE),
    VISIBLE_ITEM_COUNT(110, TypeModel.INTEGER_SIZE),
    ITEM_ADD(111, TypeModel.NULL_SIZE),
    ITEM_GROUP(112, TypeModel.VARIABLE_SIZE),
    POPUP_AUTO_HIDE(113, TypeModel.BOOLEAN_SIZE),
    POPUP_MODAL(114, TypeModel.BOOLEAN_SIZE),
    POPUP_GLASS_ENABLED(115, TypeModel.BOOLEAN_SIZE),
    POPUP_DRAGGABLE(116, TypeModel.NULL_SIZE),
    POPUP_CENTER(117, TypeModel.BOOLEAN_SIZE),
    POPUP_SHOW(118, TypeModel.BOOLEAN_SIZE),
    POPUP_HIDE(119, TypeModel.BOOLEAN_SIZE),
    POPUP_POSITION(121, TypeModel.NULL_SIZE),
    POPUP_POSITION_LEFT(122, TypeModel.INTEGER_SIZE),
    POPUP_POSITION_TOP(123, TypeModel.INTEGER_SIZE),
    HANDLER_POPUP_POSITION_CALLBACK(124, TypeModel.VARIABLE_SIZE),
    FIXDELAY(126, TypeModel.VARIABLE_SIZE),
    DISCLOSURE_PANEL_OPEN_IMG(128, TypeModel.INTEGER_SIZE),
    DISCLOSURE_PANEL_CLOSE_IMG(129, TypeModel.INTEGER_SIZE),
    MIN_SIZE(130, TypeModel.INTEGER_SIZE),
    SNAP_CLOSED_SIZE(131, TypeModel.INTEGER_SIZE),
    TOGGLE_DISPLAY_ALLOWED(132, TypeModel.BOOLEAN_SIZE),
    HANDLER_RESIZE_HANDLER(133, TypeModel.NULL_SIZE),
    HANDLER_COMMAND(134, TypeModel.NULL_SIZE),
    CREATE_LINK(135, TypeModel.VARIABLE_SIZE),
    INSERT_HORIZONTAL_RULE(136, TypeModel.NULL_SIZE),
    INSERT_HTML(137, TypeModel.VARIABLE_SIZE),
    ORDERED(138, TypeModel.NULL_SIZE),
    UNORDERED(139, TypeModel.NULL_SIZE),
    BACK_COLOR(140, TypeModel.VARIABLE_SIZE),
    FONT_NAME(141, TypeModel.VARIABLE_SIZE),
    FONT_SIZE(142, TypeModel.VARIABLE_SIZE),
    FONT_COLOR(143, TypeModel.VARIABLE_SIZE),
    JUSTIFICATION(144, TypeModel.VARIABLE_SIZE),
    TOGGLE_BOLD(145, TypeModel.NULL_SIZE),
    TOGGLE_ITALIC(146, TypeModel.NULL_SIZE),
    TOGGLE_SUBSCRIPT(147, TypeModel.NULL_SIZE),
    TOGGLE_UNDERLINE(148, TypeModel.NULL_SIZE),
    LEFT_INDENT(149, TypeModel.NULL_SIZE),
    REDO(150, TypeModel.NULL_SIZE),
    REMOVE_FORMAT(151, TypeModel.NULL_SIZE),
    REMOVE_LINK(152, TypeModel.NULL_SIZE),
    TOGGLE_RIGHT_INDENT(153, TypeModel.NULL_SIZE),
    SELECT_ALL(154, TypeModel.NULL_SIZE),
    START(155, TypeModel.BOOLEAN_SIZE),
    COMMAND_ID(156, TypeModel.LONG_SIZE),
    FIXRATE(157, TypeModel.INTEGER_SIZE),
    STOP(158, TypeModel.NULL_SIZE),
    HANDLER_BEFORE_SELECTION_HANDLER(159, TypeModel.NULL_SIZE),
    ORACLE(160, TypeModel.INTEGER_SIZE),
    HANDLER_STRING_VALUE_CHANGE_HANDLER(161, TypeModel.NULL_SIZE),
    HANDLER_STRING_SELECTION_HANDLER(162, TypeModel.NULL_SIZE),
    STREAM_REQUEST_ID(163, TypeModel.INTEGER_SIZE),
    ROOT(165, TypeModel.BOOLEAN_SIZE),
    STATE(166, TypeModel.BOOLEAN_SIZE),
    FACTORY(167, TypeModel.VARIABLE_SIZE),
    DIRECTION(168, TypeModel.INTEGER_SIZE),
    SIZE(169, TypeModel.DOUBLE_SIZE),
    WIDGET_SIZE(170, TypeModel.DOUBLE_SIZE),
    RESIZE(171, TypeModel.NULL_SIZE),
    BEFORE_INDEX(172, TypeModel.INTEGER_SIZE),
    MENU_BAR_IS_VERTICAL(173, TypeModel.BOOLEAN_SIZE),
    TAB_WIDGET(174, TypeModel.INTEGER_SIZE),
    TAB_TEXT(175, TypeModel.VARIABLE_SIZE),
    ENABLED_ON_REQUEST(176, TypeModel.BOOLEAN_SIZE),
    TABINDEX(177, TypeModel.INTEGER_SIZE),
    END_OF_PROCESSING(178, TypeModel.NULL_SIZE),
    FOCUSED(179, TypeModel.BOOLEAN_SIZE),
    DRAG_SRC(180, TypeModel.LONG_SIZE),
    HANDLER_DOM_HANDLER(181, TypeModel.NULL_SIZE),
    DOM_HANDLER_CODE(182, TypeModel.INTEGER_SIZE),
    IMAGE_TOP(183, TypeModel.INTEGER_SIZE),
    IMAGE_LEFT(184, TypeModel.INTEGER_SIZE),
    HISTORY_TOKEN(185, TypeModel.VARIABLE_SIZE),
    HISTORY_FIRE_EVENTS(186, TypeModel.BOOLEAN_SIZE),
    APPLICATION_INSTRUCTIONS(187, TypeModel.VARIABLE_SIZE),
    APPLICATION_ERRORS(188, TypeModel.VARIABLE_SIZE),
    FILE_NAME(189, TypeModel.VARIABLE_SIZE),
    HANDLER_SUBMIT_COMPLETE_HANDLER(190, TypeModel.NULL_SIZE),
    LOADING_ON_REQUEST(191, TypeModel.BOOLEAN_SIZE),
    YEAR(192, TypeModel.INTEGER_SIZE),
    MONTH(57, TypeModel.INTEGER_SIZE),
    DAY(193, TypeModel.INTEGER_SIZE),
    HANDLER_SHOW_RANGE(194, TypeModel.NULL_SIZE),
    END(195, TypeModel.VARIABLE_SIZE),
    HANDLER_CLOSE_HANDLER(196, TypeModel.NULL_SIZE),
    HANDLER_OPEN_HANDLER(197, TypeModel.NULL_SIZE),
    FLEXTABLE_CELL_FORMATTER(198, TypeModel.NULL_SIZE),
    SET_COL_SPAN(199, TypeModel.INTEGER_SIZE),
    SET_ROW_SPAN(200, TypeModel.INTEGER_SIZE),
    HANDLER_STREAM_REQUEST_HANDLER(201, TypeModel.NULL_SIZE),
    HANDLER_EMBEDED_STREAM_REQUEST_HANDLER(202, TypeModel.NULL_SIZE),
    APPLICATION_SEQ_NUM(204, TypeModel.INTEGER_SIZE),
    KEY_FILTER(207, TypeModel.VARIABLE_SIZE),
    DOM_HANDLER_TYPE(210, TypeModel.INTEGER_SIZE),
    WIDGET_POSITION(211, TypeModel.VARIABLE_SIZE),
    EVENT_INFO(212, TypeModel.VARIABLE_SIZE),
    POPUP_POSITION_AND_SHOW(213, TypeModel.NULL_SIZE),
    ERROR_MSG(214, TypeModel.VARIABLE_SIZE),
    ID(216, TypeModel.VARIABLE_SIZE),
    WINDOW_ID(218, TypeModel.INTEGER_SIZE),
    EVAL(219, TypeModel.VARIABLE_SIZE),
    CALLBACK(220, TypeModel.NULL_SIZE),
    RESULT(221, TypeModel.VARIABLE_SIZE),
    VISIBLE_LINES(222, TypeModel.INTEGER_SIZE),
    CHARACTER_WIDTH(223, TypeModel.INTEGER_SIZE),
    HORIZONTAL_SCROLL_POSITION(224, TypeModel.INTEGER_SIZE),
    SCROLL_TO(225, TypeModel.INTEGER_SIZE),
    DISPLAY_STRING(227, TypeModel.VARIABLE_SIZE),
    LIMIT(229, TypeModel.INTEGER_SIZE),
    SUGGESTION(230, TypeModel.VARIABLE_SIZE),
    SUGGESTIONS(231, TypeModel.VARIABLE_SIZE),
    FEATURES(232, TypeModel.VARIABLE_SIZE),
    URL(233, TypeModel.VARIABLE_SIZE),
    CLOSE(234, TypeModel.BOOLEAN_SIZE),
    HANDLER_SCHEDULER(236, TypeModel.NULL_SIZE),
    DEFAULT_SUGGESTIONS(237, TypeModel.VARIABLE_SIZE),
    APPLICATION_START(241, TypeModel.NULL_SIZE),
    WIDGET_TYPE(242, TypeModel.INTEGER_SIZE),
    CLEAR_DOM(243, TypeModel.BOOLEAN_SIZE),
    APPLICATION_VIEW_ID(244, TypeModel.INTEGER_SIZE),
    STOP_EVENT(247, TypeModel.INTEGER_SIZE),
    BORDER_WIDTH(22, TypeModel.INTEGER_SIZE),
    SPACING(23, TypeModel.INTEGER_SIZE),
    HANDLER_KEY_SCHEDULER(217, TypeModel.NULL_SIZE), // Not used ?
    HANDLER_KEY_RESIZE_HANDLER(226, TypeModel.NULL_SIZE), // Not used ?
    HANDLER_KEY_SHOW_RANGE(93, TypeModel.NULL_SIZE), // Not used ?
    HANDLER_KEY(208, TypeModel.VARIABLE_SIZE), // Not used ?
    HANDLER_KEY_COMMAND(209, TypeModel.NULL_SIZE), // Not used ?
    POPUP_GLASS_STYLE_NAME(120, TypeModel.VARIABLE_SIZE), // Not used ?
    TEXTBOX_ID(228, TypeModel.INTEGER_SIZE); // Not used ?

    private short key;
    private String keyStr;
    private byte[] bytesKey;
    private TypeModel type;
    private boolean firstElement;

    private Model(final int key, TypeModel size) {
        this(key, size, false);
    }

    private Model(final int key, TypeModel size, boolean firstElement) {
        this.type = size;
        this.key = (short) key;
        this.keyStr = String.valueOf(key);
        this.bytesKey = new byte[keyStr.length()];
        for (int i = 0; i < keyStr.length(); i++)
            bytesKey[i] = (byte) keyStr.charAt(i);
        this.firstElement = firstElement;
    }

    public String getKey() {
        return keyStr;
    }

    public byte[] getBytesKey() {
        return bytesKey;
    }

    public short getShortKey() {
        return key;
    }

    public TypeModel getTypeModel() {
        return type;
    }

    public boolean isFirstElement() {
        return firstElement;
    }

    public static Model getModel(short code) {
        for (final Model model : values()) {
            if (model.getShortKey() == code) return model;
        }
        throw new IllegalArgumentException("No Model found for : " + code);
    }

}